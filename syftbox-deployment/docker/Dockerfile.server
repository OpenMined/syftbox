# Cache Server Dockerfile - builds from source like ../docker/Dockerfile.server
# This server handles caching and public API access
# Build stage
FROM golang:1.24.3-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git

# Set working directory
WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy the source code
COPY . .

# Build the server binary
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o server ./cmd/server

# Final stage
FROM alpine:latest

# Install ca-certificates for HTTPS and mc (MinIO client)
RUN apk --no-cache add ca-certificates curl && \
    curl -sSL https://dl.min.io/client/mc/release/linux-amd64/mc -o /usr/local/bin/mc && \
    chmod +x /usr/local/bin/mc

WORKDIR /root/

# Copy the binary from builder
COPY --from=builder /app/server .

# Default environment variables for cache server
ENV SYFTBOX_ENV=PROD
ENV SYFTBOX_HTTP_ADDR=0.0.0.0:8080
ENV SYFTBOX_HTTP_DOMAIN=syftbox.local

# Expose the server port
EXPOSE 8080

# Run the server
CMD ["./server"]