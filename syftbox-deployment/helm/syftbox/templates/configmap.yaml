apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "syftbox.fullname" . }}-config
  labels:
    {{- include "syftbox.labels" . | nindent 4 }}
data:
  # Cache server configuration
  cache-server-config.yaml: |
    server:
      port: {{ .Values.cacheServer.service.port }}
      auth:
        enabled: {{ .Values.cacheServer.auth.enabled }}
    database:
      url: {{ include "syftbox.mockDatabaseUrl" . }}
      host: {{ .Values.database.mock.host }}
      port: {{ .Values.database.mock.port }}
      database: {{ .Values.database.mock.database }}
      username: {{ .Values.database.mock.username }}
  
  # Data owner configuration
  data-owner-config.yaml: |
    syftbox:
      server_url: {{ include "syftbox.cacheServerUrl" . }}
    database:
      # Private database configuration for data owner
      private:
        host: {{ .Values.database.private.host }}
        port: {{ .Values.database.private.port }}
        database: {{ .Values.database.private.database }}
        username: {{ .Values.database.private.username }}
        url: {{ include "syftbox.privateDatabaseUrl" . }}
      # Mock database configuration (for reference only)
      mock:
        host: {{ .Values.database.mock.host }}
        port: {{ .Values.database.mock.port }}
        database: {{ .Values.database.mock.database }}
        username: {{ .Values.database.mock.username }}
        url: {{ include "syftbox.mockDatabaseUrl" . }}
  
  # Database helper scripts
  db-connect-private.sh: |
    #!/bin/bash
    # Private database connection helper (for data owner)
    export PGPASSWORD="{{ .Values.database.private.password }}"
    psql -h "{{ .Values.database.private.host }}" -p "{{ .Values.database.private.port }}" -U "{{ .Values.database.private.username }}" -d "{{ .Values.database.private.database }}" "$@"
  
  db-connect-mock.sh: |
    #!/bin/bash
    # Mock database connection helper (for cache server)
    export PGPASSWORD="{{ .Values.database.mock.password }}"
    psql -h "{{ .Values.database.mock.host }}" -p "{{ .Values.database.mock.port }}" -U "{{ .Values.database.mock.username }}" -d "{{ .Values.database.mock.database }}" "$@"
  
  # Legacy database helper script (uses private database for backward compatibility)
  db-connect.sh: |
    #!/bin/bash
    # Database connection helper (legacy - uses private database)
    export PGPASSWORD="${DATABASE_PASSWORD}"
    psql -h "${DATABASE_HOST}" -p "${DATABASE_PORT}" -U "${DATABASE_USER}" -d "${DATABASE_NAME}" "$@"