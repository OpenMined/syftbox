{{- if .Values.dataOwner.enabled }}
---
# Data Owner Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "syftbox.fullname" . }}-data-owner
  labels:
    {{- include "syftbox.labels" . | nindent 4 }}
    component: data-owner
spec:
  replicas: {{ .Values.dataOwner.replicaCount }}
  selector:
    matchLabels:
      {{- include "syftbox.selectorLabels" . | nindent 6 }}
      component: data-owner
  template:
    metadata:
      labels:
        {{- include "syftbox.selectorLabels" . | nindent 8 }}
        component: data-owner
    spec:
      containers:
      # Main data owner container
      - name: data-owner
        image: "{{ .Values.global.imageRegistry }}/{{ .Values.images.dataowner.repository }}:{{ .Values.images.dataowner.tag }}"
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        ports:
        - name: syftbox
          containerPort: 7938
          protocol: TCP
        env:
        # Client configuration - mirrors ../docker/docker-compose-client.yml
        - name: SYFTBOX_SERVER_URL
          value: {{ include "syftbox.cacheServerUrl" . }}
        - name: SYFTBOX_AUTH_ENABLED
          value: "0"  # mirrors auth disabled in client
        
        # Private database configuration (for data owner)
        - name: DATABASE_URL
          value: {{ include "syftbox.privateDatabaseUrl" . }}
        - name: PRIVATE_DATABASE_HOST
          value: {{ .Values.database.private.host | quote }}
        - name: PRIVATE_DATABASE_PORT
          value: {{ .Values.database.private.port | quote }}
        - name: PRIVATE_DATABASE_NAME
          value: {{ .Values.database.private.database | quote }}
        - name: PRIVATE_DATABASE_USER
          value: {{ .Values.database.private.username | quote }}
        - name: PRIVATE_DATABASE_PASSWORD
          value: {{ .Values.database.private.password | quote }}
        
        # Mock database configuration (for reference)
        - name: MOCK_DATABASE_HOST
          value: {{ .Values.database.mock.host | quote }}
        - name: MOCK_DATABASE_PORT
          value: {{ .Values.database.mock.port | quote }}
        - name: MOCK_DATABASE_NAME
          value: {{ .Values.database.mock.database | quote }}
        - name: MOCK_DATABASE_USER
          value: {{ .Values.database.mock.username | quote }}
        - name: MOCK_DATABASE_PASSWORD
          value: {{ .Values.database.mock.password | quote }}
        command:
        - "/bin/bash"
        - "-c"
        - |
          # Copy database connection scripts
          cp /config/db-connect.sh /usr/local/bin/db-connect
          cp /config/db-connect-private.sh /usr/local/bin/db-connect-private
          cp /config/db-connect-mock.sh /usr/local/bin/db-connect-mock
          chmod +x /usr/local/bin/db-connect
          chmod +x /usr/local/bin/db-connect-private
          chmod +x /usr/local/bin/db-connect-mock
          
          # Keep container running
          echo "Data owner container started."
          echo "Database connections available via:"
          echo "  - 'db-connect' (legacy - private database)"
          echo "  - 'db-connect-private' (private database)"
          echo "  - 'db-connect-mock' (mock database)"
          while true; do sleep 30; done
        resources:
          {{- toYaml .Values.dataOwner.resources | nindent 10 }}
        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true
        - name: workspace
          mountPath: /workspace
      
      {{- if .Values.dataOwner.jupyter.enabled }}
      # Jupyter Lab sidecar container
      - name: jupyter
        image: "{{ .Values.global.imageRegistry }}/{{ .Values.images.dataowner.repository }}:{{ .Values.images.dataowner.tag }}"
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        ports:
        - name: jupyter
          containerPort: 8888
          protocol: TCP
        env:
        - name: DATABASE_URL
          value: {{ include "syftbox.privateDatabaseUrl" . }}
        - name: DATABASE_HOST
          value: {{ .Values.database.private.host | quote }}
        - name: DATABASE_PORT
          value: {{ .Values.database.private.port | quote }}
        - name: DATABASE_NAME
          value: {{ .Values.database.private.database | quote }}
        - name: DATABASE_USER
          value: {{ .Values.database.private.username | quote }}
        - name: DATABASE_PASSWORD
          value: {{ .Values.database.private.password | quote }}
        command:
        - "jupyter"
        - "lab"
        - "--ip=0.0.0.0"
        - "--port=8888"
        - "--allow-root"
        - "--no-browser"
        - "--NotebookApp.token={{ .Values.dataOwner.jupyter.token }}"
        - "--NotebookApp.password="
        workingDir: /workspace
        volumeMounts:
        - name: workspace
          mountPath: /workspace
      {{- end }}
      
      volumes:
      - name: config
        configMap:
          name: {{ include "syftbox.fullname" . }}-config
      - name: workspace
        emptyDir: {}
---
# Data Owner Service
apiVersion: v1
kind: Service
metadata:
  name: {{ include "syftbox.fullname" . }}-data-owner
  labels:
    {{- include "syftbox.labels" . | nindent 4 }}
    component: data-owner
spec:
  type: {{ .Values.dataOwner.service.type }}
  ports:
  - name: syftbox
    port: {{ .Values.dataOwner.service.ports.syftbox }}
    targetPort: syftbox
    protocol: TCP
  {{- if .Values.dataOwner.jupyter.enabled }}
  - name: jupyter
    port: {{ .Values.dataOwner.service.ports.jupyter }}
    targetPort: jupyter
    protocol: TCP
  {{- end }}
  selector:
    {{- include "syftbox.selectorLabels" . | nindent 4 }}
    component: data-owner
{{- end }}